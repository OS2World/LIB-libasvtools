# Makefile.in generated by automake 1.10.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/libasvtools
pkglibdir = $(libdir)/libasvtools
pkgincludedir = $(includedir)/libasvtools
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-os2-emx
host_triplet = i386-pc-os2-emx
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
PROGRAMS = $(noinst_PROGRAMS)
accumulate_SOURCES = accumulate.c
accumulate_OBJECTS = accumulate.$(OBJEXT)
accumulate_LDADD = $(LDADD)
accumulate_DEPENDENCIES = ../src/libasvtools.la
base64_SOURCES = base64.c
base64_OBJECTS = base64.$(OBJEXT)
base64_LDADD = $(LDADD)
base64_DEPENDENCIES = ../src/libasvtools.la
binchars_SOURCES = binchars.c
binchars_OBJECTS = binchars.$(OBJEXT)
binchars_LDADD = $(LDADD)
binchars_DEPENDENCIES = ../src/libasvtools.la
bracket_SOURCES = bracket.c
bracket_OBJECTS = bracket.$(OBJEXT)
bracket_LDADD = $(LDADD)
bracket_DEPENDENCIES = ../src/libasvtools.la
check_list_SOURCES = check_list.c
check_list_OBJECTS = check_list.$(OBJEXT)
check_list_LDADD = $(LDADD)
check_list_DEPENDENCIES = ../src/libasvtools.la
clock1_SOURCES = clock1.c
clock1_OBJECTS = clock1.$(OBJEXT)
clock1_LDADD = $(LDADD)
clock1_DEPENDENCIES = ../src/libasvtools.la
connect_SOURCES = connect.c
connect_OBJECTS = connect.$(OBJEXT)
connect_LDADD = $(LDADD)
connect_DEPENDENCIES = ../src/libasvtools.la
finddesc_SOURCES = finddesc.c
finddesc_OBJECTS = finddesc.$(OBJEXT)
finddesc_LDADD = $(LDADD)
finddesc_DEPENDENCIES = ../src/libasvtools.la
fnmatch1_SOURCES = fnmatch1.c
fnmatch1_OBJECTS = fnmatch1.$(OBJEXT)
fnmatch1_LDADD = $(LDADD)
fnmatch1_DEPENDENCIES = ../src/libasvtools.la
fprint_bits_SOURCES = fprint_bits.c
fprint_bits_OBJECTS = fprint_bits.$(OBJEXT)
fprint_bits_LDADD = $(LDADD)
fprint_bits_DEPENDENCIES = ../src/libasvtools.la
fsort_SOURCES = fsort.c
fsort_OBJECTS = fsort.$(OBJEXT)
fsort_LDADD = $(LDADD)
fsort_DEPENDENCIES = ../src/libasvtools.la
http_getdate_SOURCES = http_getdate.c
http_getdate_OBJECTS = http_getdate.$(OBJEXT)
http_getdate_LDADD = $(LDADD)
http_getdate_DEPENDENCIES = ../src/libasvtools.la
http_parse_SOURCES = http_parse.c
http_parse_OBJECTS = http_parse.$(OBJEXT)
http_parse_LDADD = $(LDADD)
http_parse_DEPENDENCIES = ../src/libasvtools.la
is_textfile_SOURCES = is_textfile.c
is_textfile_OBJECTS = is_textfile.$(OBJEXT)
is_textfile_LDADD = $(LDADD)
is_textfile_DEPENDENCIES = ../src/libasvtools.la
linebuf_SOURCES = linebuf.c
linebuf_OBJECTS = linebuf.$(OBJEXT)
linebuf_LDADD = $(LDADD)
linebuf_DEPENDENCIES = ../src/libasvtools.la
load_stdin_SOURCES = load_stdin.c
load_stdin_OBJECTS = load_stdin.$(OBJEXT)
load_stdin_LDADD = $(LDADD)
load_stdin_DEPENDENCIES = ../src/libasvtools.la
load_textfile_SOURCES = load_textfile.c
load_textfile_OBJECTS = load_textfile.$(OBJEXT)
load_textfile_LDADD = $(LDADD)
load_textfile_DEPENDENCIES = ../src/libasvtools.la
longprint_SOURCES = longprint.c
longprint_OBJECTS = longprint.$(OBJEXT)
longprint_LDADD = $(LDADD)
longprint_DEPENDENCIES = ../src/libasvtools.la
math_routines_SOURCES = math_routines.c
math_routines_OBJECTS = math_routines.$(OBJEXT)
math_routines_LDADD = $(LDADD)
math_routines_DEPENDENCIES = ../src/libasvtools.la
merge_SOURCES = merge.c
merge_OBJECTS = merge.$(OBJEXT)
merge_LDADD = $(LDADD)
merge_DEPENDENCIES = ../src/libasvtools.la
mime_SOURCES = mime.c
mime_OBJECTS = mime.$(OBJEXT)
mime_LDADD = $(LDADD)
mime_DEPENDENCIES = ../src/libasvtools.la
parse_date_SOURCES = parse_date.c
parse_date_OBJECTS = parse_date.$(OBJEXT)
parse_date_LDADD = $(LDADD)
parse_date_DEPENDENCIES = ../src/libasvtools.la
pathdcmp_SOURCES = pathdcmp.c
pathdcmp_OBJECTS = pathdcmp.$(OBJEXT)
pathdcmp_LDADD = $(LDADD)
pathdcmp_DEPENDENCIES = ../src/libasvtools.la
pretty_SOURCES = pretty.c
pretty_OBJECTS = pretty.$(OBJEXT)
pretty_LDADD = $(LDADD)
pretty_DEPENDENCIES = ../src/libasvtools.la
pretty_date_SOURCES = pretty_date.c
pretty_date_OBJECTS = pretty_date.$(OBJEXT)
pretty_date_LDADD = $(LDADD)
pretty_date_DEPENDENCIES = ../src/libasvtools.la
psort_SOURCES = psort.c
psort_OBJECTS = psort.$(OBJEXT)
psort_LDADD = $(LDADD)
psort_DEPENDENCIES = ../src/libasvtools.la
ranges_SOURCES = ranges.c
ranges_OBJECTS = ranges.$(OBJEXT)
ranges_LDADD = $(LDADD)
ranges_DEPENDENCIES = ../src/libasvtools.la
regex_test_SOURCES = regex_test.c
regex_test_OBJECTS = regex_test.$(OBJEXT)
regex_test_LDADD = $(LDADD)
regex_test_DEPENDENCIES = ../src/libasvtools.la
snprintf1_SOURCES = snprintf1.c
snprintf1_OBJECTS = snprintf1.$(OBJEXT)
snprintf1_LDADD = $(LDADD)
snprintf1_DEPENDENCIES = ../src/libasvtools.la
sortfile_SOURCES = sortfile.c
sortfile_OBJECTS = sortfile.$(OBJEXT)
sortfile_LDADD = $(LDADD)
sortfile_DEPENDENCIES = ../src/libasvtools.la
str_parseline_SOURCES = str_parseline.c
str_parseline_OBJECTS = str_parseline.$(OBJEXT)
str_parseline_LDADD = $(LDADD)
str_parseline_DEPENDENCIES = ../src/libasvtools.la
str_replace_SOURCES = str_replace.c
str_replace_OBJECTS = str_replace.$(OBJEXT)
str_replace_LDADD = $(LDADD)
str_replace_DEPENDENCIES = ../src/libasvtools.la
str_words_SOURCES = str_words.c
str_words_OBJECTS = str_words.$(OBJEXT)
str_words_LDADD = $(LDADD)
str_words_DEPENDENCIES = ../src/libasvtools.la
subtree_SOURCES = subtree.c
subtree_OBJECTS = subtree.$(OBJEXT)
subtree_LDADD = $(LDADD)
subtree_DEPENDENCIES = ../src/libasvtools.la
uniq_SOURCES = uniq.c
uniq_OBJECTS = uniq.$(OBJEXT)
uniq_LDADD = $(LDADD)
uniq_DEPENDENCIES = ../src/libasvtools.la
unixentry_SOURCES = unixentry.c
unixentry_OBJECTS = unixentry.$(OBJEXT)
unixentry_LDADD = $(LDADD)
unixentry_DEPENDENCIES = ../src/libasvtools.la
vby_SOURCES = vby.c
vby_OBJECTS = vby.$(OBJEXT)
vby_LDADD = $(LDADD)
vby_DEPENDENCIES = ../src/libasvtools.la
xlf_SOURCES = xlf.c
xlf_OBJECTS = xlf.$(OBJEXT)
xlf_LDADD = $(LDADD)
xlf_DEPENDENCIES = ../src/libasvtools.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/scripts/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = accumulate.c base64.c binchars.c bracket.c check_list.c \
	clock1.c connect.c finddesc.c fnmatch1.c fprint_bits.c fsort.c \
	http_getdate.c http_parse.c is_textfile.c linebuf.c \
	load_stdin.c load_textfile.c longprint.c math_routines.c \
	merge.c mime.c parse_date.c pathdcmp.c pretty.c pretty_date.c \
	psort.c ranges.c regex_test.c snprintf1.c sortfile.c \
	str_parseline.c str_replace.c str_words.c subtree.c uniq.c \
	unixentry.c vby.c xlf.c
DIST_SOURCES = accumulate.c base64.c binchars.c bracket.c check_list.c \
	clock1.c connect.c finddesc.c fnmatch1.c fprint_bits.c fsort.c \
	http_getdate.c http_parse.c is_textfile.c linebuf.c \
	load_stdin.c load_textfile.c longprint.c math_routines.c \
	merge.c mime.c parse_date.c pathdcmp.c pretty.c pretty_date.c \
	psort.c ranges.c regex_test.c snprintf1.c sortfile.c \
	str_parseline.c str_replace.c str_words.c subtree.c uniq.c \
	unixentry.c vby.c xlf.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} U:/progetti/libasvtools-1.0.0/scripts/missing --run aclocal-1.10
AMTAR = tar.exe
AR = ar.exe
AUTOCONF = ${SHELL} U:/progetti/libasvtools-1.0.0/scripts/missing --run autoconf
AUTOHEADER = ${SHELL} U:/progetti/libasvtools-1.0.0/scripts/missing --run autoheader
AUTOMAKE = ${SHELL} U:/progetti/libasvtools-1.0.0/scripts/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D__EMX__ -DOS2  -D__ST_MT_ERRNO__ -g -Wall -ansi -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = U:/MOZTOOLS/grep.exe -E
EXEEXT = .exe
FGREP = U:/MOZTOOLS/grep.exe -F
GREP = U:/MOZTOOLS/grep.exe
INSTALL = u:/bin/install.exe
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = ld.exe
LDFLAGS = -Zexe -Zomf -Zmap -Zargs-wild -D__ST_MT_ERRNO__
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = makeinfo --no-split
MKDIR_P = u:/bin/mkdir.exe -p
NM = U:/usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libasvtools
PACKAGE_BUGREPORT = asv@ayukov.com
PACKAGE_NAME = libasvtools
PACKAGE_STRING = libasvtools 1.0.0
PACKAGE_TARNAME = libasvtools
PACKAGE_VERSION = 1.0.0
PATH_SEPARATOR = ;
RANLIB = echo
SED = U:/MOZTOOLS/sed.exe
SET_MAKE = 
SHELL = sh
STRIP = strip
VERSION = 1.0.0
abs_builddir = U:/progetti/libasvtools-1.0.0/tests
abs_srcdir = U:/progetti/libasvtools-1.0.0/tests
abs_top_builddir = U:/progetti/libasvtools-1.0.0
abs_top_srcdir = U:/progetti/libasvtools-1.0.0
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
binmode = O_BINARY
build = i386-pc-os2-emx
build_alias = 
build_cpu = i386
build_os = os2-emx
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_fcntl_h = 1
have_stdint_h = 1
have_strlwr = 1
have_strupr = 1
have_u_int16_t = 1
have_u_int32_t = 1
have_u_int64_t = 1
have_u_int8_t = 1
host = i386-pc-os2-emx
host_alias = 
host_cpu = i386
host_os = os2-emx
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) U:/progetti/libasvtools-1.0.0/scripts/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = u:/bin/mkdir.exe -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
EXTRA_DIST = Makefile.os2
CLEANFILES = random.*
noinst_PROGRAMS = uniq$(EXEEXT) subtree$(EXEEXT) base64$(EXEEXT) \
  pathdcmp$(EXEEXT) finddesc$(EXEEXT) parse_date$(EXEEXT) \
  str_parseline$(EXEEXT) load_textfile$(EXEEXT) accumulate$(EXEEXT) \
  is_textfile$(EXEEXT) longprint$(EXEEXT) str_words$(EXEEXT) fsort$(EXEEXT) \
  merge$(EXEEXT) pretty$(EXEEXT) psort$(EXEEXT) xlf$(EXEEXT) \
  unixentry$(EXEEXT) connect$(EXEEXT) \
  str_replace$(EXEEXT) regex_test$(EXEEXT) \
  http_parse$(EXEEXT) binchars$(EXEEXT) mime$(EXEEXT) fprint_bits$(EXEEXT) \
  load_stdin$(EXEEXT) sortfile$(EXEEXT) linebuf$(EXEEXT) \
  check_list$(EXEEXT) http_getdate$(EXEEXT) \
  fnmatch1$(EXEEXT) snprintf1$(EXEEXT) clock1$(EXEEXT) bracket$(EXEEXT) \
  ranges$(EXEEXT) vby$(EXEEXT) pretty_date$(EXEEXT) math_routines$(EXEEXT)

LDADD = ../src/libasvtools.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
accumulate$(EXEEXT): $(accumulate_OBJECTS) $(accumulate_DEPENDENCIES) 
	@rm -f accumulate$(EXEEXT)
	$(LINK) $(accumulate_OBJECTS) $(accumulate_LDADD) $(LIBS)
base64$(EXEEXT): $(base64_OBJECTS) $(base64_DEPENDENCIES) 
	@rm -f base64$(EXEEXT)
	$(LINK) $(base64_OBJECTS) $(base64_LDADD) $(LIBS)
binchars$(EXEEXT): $(binchars_OBJECTS) $(binchars_DEPENDENCIES) 
	@rm -f binchars$(EXEEXT)
	$(LINK) $(binchars_OBJECTS) $(binchars_LDADD) $(LIBS)
bracket$(EXEEXT): $(bracket_OBJECTS) $(bracket_DEPENDENCIES) 
	@rm -f bracket$(EXEEXT)
	$(LINK) $(bracket_OBJECTS) $(bracket_LDADD) $(LIBS)
check_list$(EXEEXT): $(check_list_OBJECTS) $(check_list_DEPENDENCIES) 
	@rm -f check_list$(EXEEXT)
	$(LINK) $(check_list_OBJECTS) $(check_list_LDADD) $(LIBS)
clock1$(EXEEXT): $(clock1_OBJECTS) $(clock1_DEPENDENCIES) 
	@rm -f clock1$(EXEEXT)
	$(LINK) $(clock1_OBJECTS) $(clock1_LDADD) $(LIBS)
connect$(EXEEXT): $(connect_OBJECTS) $(connect_DEPENDENCIES) 
	@rm -f connect$(EXEEXT)
	$(LINK) $(connect_OBJECTS) $(connect_LDADD) $(LIBS)
finddesc$(EXEEXT): $(finddesc_OBJECTS) $(finddesc_DEPENDENCIES) 
	@rm -f finddesc$(EXEEXT)
	$(LINK) $(finddesc_OBJECTS) $(finddesc_LDADD) $(LIBS)
fnmatch1$(EXEEXT): $(fnmatch1_OBJECTS) $(fnmatch1_DEPENDENCIES) 
	@rm -f fnmatch1$(EXEEXT)
	$(LINK) $(fnmatch1_OBJECTS) $(fnmatch1_LDADD) $(LIBS)
fprint_bits$(EXEEXT): $(fprint_bits_OBJECTS) $(fprint_bits_DEPENDENCIES) 
	@rm -f fprint_bits$(EXEEXT)
	$(LINK) $(fprint_bits_OBJECTS) $(fprint_bits_LDADD) $(LIBS)
fsort$(EXEEXT): $(fsort_OBJECTS) $(fsort_DEPENDENCIES) 
	@rm -f fsort$(EXEEXT)
	$(LINK) $(fsort_OBJECTS) $(fsort_LDADD) $(LIBS)
http_getdate$(EXEEXT): $(http_getdate_OBJECTS) $(http_getdate_DEPENDENCIES) 
	@rm -f http_getdate$(EXEEXT)
	$(LINK) $(http_getdate_OBJECTS) $(http_getdate_LDADD) $(LIBS)
http_parse$(EXEEXT): $(http_parse_OBJECTS) $(http_parse_DEPENDENCIES) 
	@rm -f http_parse$(EXEEXT)
	$(LINK) $(http_parse_OBJECTS) $(http_parse_LDADD) $(LIBS)
is_textfile$(EXEEXT): $(is_textfile_OBJECTS) $(is_textfile_DEPENDENCIES) 
	@rm -f is_textfile$(EXEEXT)
	$(LINK) $(is_textfile_OBJECTS) $(is_textfile_LDADD) $(LIBS)
linebuf$(EXEEXT): $(linebuf_OBJECTS) $(linebuf_DEPENDENCIES) 
	@rm -f linebuf$(EXEEXT)
	$(LINK) $(linebuf_OBJECTS) $(linebuf_LDADD) $(LIBS)
load_stdin$(EXEEXT): $(load_stdin_OBJECTS) $(load_stdin_DEPENDENCIES) 
	@rm -f load_stdin$(EXEEXT)
	$(LINK) $(load_stdin_OBJECTS) $(load_stdin_LDADD) $(LIBS)
load_textfile$(EXEEXT): $(load_textfile_OBJECTS) $(load_textfile_DEPENDENCIES) 
	@rm -f load_textfile$(EXEEXT)
	$(LINK) $(load_textfile_OBJECTS) $(load_textfile_LDADD) $(LIBS)
longprint$(EXEEXT): $(longprint_OBJECTS) $(longprint_DEPENDENCIES) 
	@rm -f longprint$(EXEEXT)
	$(LINK) $(longprint_OBJECTS) $(longprint_LDADD) $(LIBS)
math_routines$(EXEEXT): $(math_routines_OBJECTS) $(math_routines_DEPENDENCIES) 
	@rm -f math_routines$(EXEEXT)
	$(LINK) $(math_routines_OBJECTS) $(math_routines_LDADD) $(LIBS)
merge$(EXEEXT): $(merge_OBJECTS) $(merge_DEPENDENCIES) 
	@rm -f merge$(EXEEXT)
	$(LINK) $(merge_OBJECTS) $(merge_LDADD) $(LIBS)
mime$(EXEEXT): $(mime_OBJECTS) $(mime_DEPENDENCIES) 
	@rm -f mime$(EXEEXT)
	$(LINK) $(mime_OBJECTS) $(mime_LDADD) $(LIBS)
parse_date$(EXEEXT): $(parse_date_OBJECTS) $(parse_date_DEPENDENCIES) 
	@rm -f parse_date$(EXEEXT)
	$(LINK) $(parse_date_OBJECTS) $(parse_date_LDADD) $(LIBS)
pathdcmp$(EXEEXT): $(pathdcmp_OBJECTS) $(pathdcmp_DEPENDENCIES) 
	@rm -f pathdcmp$(EXEEXT)
	$(LINK) $(pathdcmp_OBJECTS) $(pathdcmp_LDADD) $(LIBS)
pretty$(EXEEXT): $(pretty_OBJECTS) $(pretty_DEPENDENCIES) 
	@rm -f pretty$(EXEEXT)
	$(LINK) $(pretty_OBJECTS) $(pretty_LDADD) $(LIBS)
pretty_date$(EXEEXT): $(pretty_date_OBJECTS) $(pretty_date_DEPENDENCIES) 
	@rm -f pretty_date$(EXEEXT)
	$(LINK) $(pretty_date_OBJECTS) $(pretty_date_LDADD) $(LIBS)
psort$(EXEEXT): $(psort_OBJECTS) $(psort_DEPENDENCIES) 
	@rm -f psort$(EXEEXT)
	$(LINK) $(psort_OBJECTS) $(psort_LDADD) $(LIBS)
ranges$(EXEEXT): $(ranges_OBJECTS) $(ranges_DEPENDENCIES) 
	@rm -f ranges$(EXEEXT)
	$(LINK) $(ranges_OBJECTS) $(ranges_LDADD) $(LIBS)
regex_test$(EXEEXT): $(regex_test_OBJECTS) $(regex_test_DEPENDENCIES) 
	@rm -f regex_test$(EXEEXT)
	$(LINK) $(regex_test_OBJECTS) $(regex_test_LDADD) $(LIBS)
snprintf1$(EXEEXT): $(snprintf1_OBJECTS) $(snprintf1_DEPENDENCIES) 
	@rm -f snprintf1$(EXEEXT)
	$(LINK) $(snprintf1_OBJECTS) $(snprintf1_LDADD) $(LIBS)
sortfile$(EXEEXT): $(sortfile_OBJECTS) $(sortfile_DEPENDENCIES) 
	@rm -f sortfile$(EXEEXT)
	$(LINK) $(sortfile_OBJECTS) $(sortfile_LDADD) $(LIBS)
str_parseline$(EXEEXT): $(str_parseline_OBJECTS) $(str_parseline_DEPENDENCIES) 
	@rm -f str_parseline$(EXEEXT)
	$(LINK) $(str_parseline_OBJECTS) $(str_parseline_LDADD) $(LIBS)
str_replace$(EXEEXT): $(str_replace_OBJECTS) $(str_replace_DEPENDENCIES) 
	@rm -f str_replace$(EXEEXT)
	$(LINK) $(str_replace_OBJECTS) $(str_replace_LDADD) $(LIBS)
str_words$(EXEEXT): $(str_words_OBJECTS) $(str_words_DEPENDENCIES) 
	@rm -f str_words$(EXEEXT)
	$(LINK) $(str_words_OBJECTS) $(str_words_LDADD) $(LIBS)
subtree$(EXEEXT): $(subtree_OBJECTS) $(subtree_DEPENDENCIES) 
	@rm -f subtree$(EXEEXT)
	$(LINK) $(subtree_OBJECTS) $(subtree_LDADD) $(LIBS)
uniq$(EXEEXT): $(uniq_OBJECTS) $(uniq_DEPENDENCIES) 
	@rm -f uniq$(EXEEXT)
	$(LINK) $(uniq_OBJECTS) $(uniq_LDADD) $(LIBS)
unixentry$(EXEEXT): $(unixentry_OBJECTS) $(unixentry_DEPENDENCIES) 
	@rm -f unixentry$(EXEEXT)
	$(LINK) $(unixentry_OBJECTS) $(unixentry_LDADD) $(LIBS)
vby$(EXEEXT): $(vby_OBJECTS) $(vby_DEPENDENCIES) 
	@rm -f vby$(EXEEXT)
	$(LINK) $(vby_OBJECTS) $(vby_LDADD) $(LIBS)
xlf$(EXEEXT): $(xlf_OBJECTS) $(xlf_DEPENDENCIES) 
	@rm -f xlf$(EXEEXT)
	$(LINK) $(xlf_OBJECTS) $(xlf_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/accumulate.Po
include ./$(DEPDIR)/base64.Po
include ./$(DEPDIR)/binchars.Po
include ./$(DEPDIR)/bracket.Po
include ./$(DEPDIR)/check_list.Po
include ./$(DEPDIR)/clock1.Po
include ./$(DEPDIR)/connect.Po
include ./$(DEPDIR)/finddesc.Po
include ./$(DEPDIR)/fnmatch1.Po
include ./$(DEPDIR)/fprint_bits.Po
include ./$(DEPDIR)/fsort.Po
include ./$(DEPDIR)/http_getdate.Po
include ./$(DEPDIR)/http_parse.Po
include ./$(DEPDIR)/is_textfile.Po
include ./$(DEPDIR)/linebuf.Po
include ./$(DEPDIR)/load_stdin.Po
include ./$(DEPDIR)/load_textfile.Po
include ./$(DEPDIR)/longprint.Po
include ./$(DEPDIR)/math_routines.Po
include ./$(DEPDIR)/merge.Po
include ./$(DEPDIR)/mime.Po
include ./$(DEPDIR)/parse_date.Po
include ./$(DEPDIR)/pathdcmp.Po
include ./$(DEPDIR)/pretty.Po
include ./$(DEPDIR)/pretty_date.Po
include ./$(DEPDIR)/psort.Po
include ./$(DEPDIR)/ranges.Po
include ./$(DEPDIR)/regex_test.Po
include ./$(DEPDIR)/snprintf1.Po
include ./$(DEPDIR)/sortfile.Po
include ./$(DEPDIR)/str_parseline.Po
include ./$(DEPDIR)/str_replace.Po
include ./$(DEPDIR)/str_words.Po
include ./$(DEPDIR)/subtree.Po
include ./$(DEPDIR)/uniq.Po
include ./$(DEPDIR)/unixentry.Po
include ./$(DEPDIR)/vby.Po
include ./$(DEPDIR)/xlf.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


test: all
	@ for p in $(noinst_PROGRAMS); do \
		echo "....$$p" ;\
		$$p$(EXEEXT) ;\
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
